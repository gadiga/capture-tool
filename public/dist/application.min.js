"use strict";var ApplicationConfiguration=function(){var applicationModuleName="gaf-xml-tool",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularTreeview"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core",["angularTreeview","globals","ngAnimate"]),ApplicationConfiguration.registerModule("gafxmls",["globals","xeditable","checklist-model","angularResizable"]),angular.module("gafxmls").run(["editableOptions",function(editableOptions){editableOptions.theme="bs3"}]),ApplicationConfiguration.registerModule("globals"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$window","$scope","Authentication","Menus","Gafglobals","$rootScope",function($window,$scope,Authentication,Menus,Gafglobals,$rootScope){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.allowLogout=!0,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.checkForSave=function(){if(console.log("Checking for save....."),Gafglobals.getGafScriptChanged()){var confm=$window.confirm("The Document has been changed!! Do you want to SAVE it?");confm?($scope.allowLogout=!1,$rootScope.doDocSave=!0):$scope.allowLogout=!0}else $scope.allowLogout=!0}}]),angular.module("core").controller("HomeController",["$window","$scope","Authentication","Home","Gafglobals","Gafxmls",function($window,$scope,Authentication,Home,Gafglobals,Gafxmls){function loadGafXMLs(){Gafxmls.query(function(result){$scope.gafxmls=result}),$scope.loadGIF=!1}$scope.authentication=Authentication,$scope.temporaryNode={children:[]},$scope.gafxmlXSD={},$scope.gafxmlTables=[],$scope.gafxmlNameMappings=[],$scope.gafxmlTypes=[],$scope.currentTable=[],$scope.screenData=[],$scope.gafxmls=[],Home.getGAFXMLSchema(function(result){$scope.gafxmlXSD=result,$scope.gafxmlTables=$scope.gafxmlXSD.guiData.table,$scope.gafxmlNameMappings=$scope.gafxmlXSD.guiData.nameMappings,$scope.gafxmlTypes=$scope.gafxmlXSD.guiData.type,$scope.setCurrentTable($scope.gafxmlXSD.guiData.table[0]),console.log(JSON.stringify($scope.screenData)),Gafglobals.setGafGlobals({gafxmlXSD:$scope.gafxmlXSD,gafxmlTables:$scope.gafxmlTables,gafxmlNameMappings:$scope.gafxmlNameMappings,gafxmlTypes:$scope.gafxmlTypes}),$scope.screenData=Gafglobals.getScreenDataStructure(),loadGafXMLs()}),$scope.loadGIF=!0,$scope.setCurrentTable=function(table){if($scope.currentTable)for(var i=0,len=$scope.screenData.length;len>i;i++){var ctbl=$scope.screenData[i];if(ctbl.name===$scope.currentTable.name);}$scope.currentTable=table},$scope.getColumnHeaders=function(col){return Gafglobals.getColumnHeaders(col)},$scope.roleList1=[{roleName:"User",roleId:"role1",children:[{roleName:"subUser1",roleId:"role11",children:[]},{roleName:"subUser2",roleId:"role12",children:[{roleName:"subUser2-1",roleId:"role121",children:[{roleName:"subUser2-1-1",roleId:"role1211",children:[]},{roleName:"subUser2-1-2",roleId:"role1212",children:[]}]}]}]},{roleName:"Admin",roleId:"role2",children:[]},{roleName:"Guest",roleId:"role3",children:[]}],$scope.roleList2=[{roleName:"User",roleId:"role1",children:[{roleName:"subUser1",roleId:"role11",collapsed:!0,children:[]},{roleName:"subUser2",roleId:"role12",collapsed:!0,children:[{roleName:"subUser2-1",roleId:"role121",children:[{roleName:"subUser2-1-1",roleId:"role1211",children:[]},{roleName:"subUser2-1-2",roleId:"role1212",children:[]}]}]}]},{roleName:"Admin",roleId:"role2",children:[{roleName:"subAdmin1",roleId:"role11",collapsed:!0,children:[]},{roleName:"subAdmin2",roleId:"role12",children:[{roleName:"subAdmin2-1",roleId:"role121",children:[{roleName:"subAdmin2-1-1",roleId:"role1211",children:[]},{roleName:"subAdmin2-1-2",roleId:"role1212",children:[]}]}]}]},{roleName:"Guest",roleId:"role3",children:[{roleName:"subGuest1",roleId:"role11",children:[]},{roleName:"subGuest2",roleId:"role12",collapsed:!0,children:[{roleName:"subGuest2-1",roleId:"role121",children:[{roleName:"subGuest2-1-1",roleId:"role1211",children:[]},{roleName:"subGuest2-1-2",roleId:"role1212",children:[]}]}]}]}],$scope.roleList=$scope.roleList1}]),angular.module("core").factory("Home",["$resource",function($resource){return $resource("gafxmlfile",{},{getGAFXMLSchema:{method:"GET"}})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("gafxmls").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGafxmls",{url:"/gafxmls",templateUrl:"modules/gafxmls/views/list-gafxmls.client.view.html"}).state("createGafxml",{url:"/gafxmls/create",templateUrl:"modules/gafxmls/views/create-gafxml.client.view.html"}).state("viewGafxml",{url:"/gafxmls/:gafxmlId",templateUrl:"modules/gafxmls/views/view-gafxml.client.view.html"}).state("editGafxml",{url:"/gafxmls/:gafxmlId/edit",templateUrl:"modules/gafxmls/views/edit-gafxml.client.view.html"})}]),angular.module("gafxmls").config(["$compileProvider",function($compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|file|blob):/)}]),angular.module("gafxmls").controller("GafxmlsController",["$window","$scope","$stateParams","$location","Authentication","Gafxmls","Gafglobals","$modal","$timeout","$filter","$rootScope",function($window,$scope,$stateParams,$location,Authentication,Gafxmls,Gafglobals,$modal,$timeout,$filter,$rootScope){function initScope(){var gafXmlGlobal=Gafglobals.getGafGlobals();$scope.gafxmlXSD=gafXmlGlobal.gafxmlXSD,$scope.gafxmlTables=gafXmlGlobal.gafxmlTables,$scope.gafxmlNameMappings=gafXmlGlobal.gafxmlNameMappings,$scope.gafxmlTypes=gafXmlGlobal.gafxmlTypes,$scope.currentTable={},$scope.screenData=Gafglobals.getScreenDataStructure(),$scope.readWrite="",$scope.unsaved=!1,$scope.scriptChanged=!1,$scope.currentlyEditing=void 0===$scope.currentlyEditing?"":$scope.currentlyEditing}function setTable(table){if(void 0!==table.data){for(var rows=0,rlen=table.data.length;rlen>rows;rows++){{table.data[rows]}table.data[rows].rowIndex=rows}$scope.currentTable=table}$scope.maxRowIndex=0,Gafglobals.setCurrentTable(table),$timeout(function(){$scope.closeLoader()},5e3)}function checkForSegments(icol,itbl){for(var segments=[],segparms=[],cfound=!1,segPrefix=[],i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++){var tbl=$scope.gafxmlXSD.guiData.table[i];if(tbl.$.name===itbl)for(var j=0,jlen=tbl.column.length;jlen>j;j++)if(tbl.column[j].$.hasOwnProperty("isSegmented")&&tbl.column[j].$.name===icol){segPrefix=tbl.column[j].$.segmentPrefix.split(",");for(var k=0,klen=tbl.data.length;klen>k;k++){var segs=tbl.data[k][icol],slist=[];slist=segs.split("/"),slist.length>segments.length&&(segments=[],segments=segs.split("/"));for(var sp=0;sp<segPrefix.length;sp++)for(var sg=0;sg<segments.length;sg++)segparms[segparms.length]=segPrefix[sp]+(sg+1)}cfound=!0;break}if(cfound)break}return{prefix:segPrefix,segs:segparms}}function findInArray(searchlist,searchItem){for(var hash={},i=0;i<searchlist.length;i+=1)hash[searchlist[i]]=i;return hash.hasOwnProperty(searchItem)}function setTableData(tableList){for(var t=0,tlen=$scope.screenData.length;tlen>t;t++)for(var tabs=0,tablen=tableList.length;tablen>tabs;tabs++)if($scope.screenData[t].$.name===tableList[tabs].table._name){$scope.screenData[t].data=[];for(var rows=0,rlen=tableList[tabs].table.data.length;rlen>rows;rows++){for(var dataItems={},dbcol=tableList[tabs].table.data[rows],j=0,jlen=$scope.screenData[t].column.length;jlen>j;j++){var col=$scope.screenData[t].column[j];dataItems[col.$.name]=dbcol[col.$.name]}$scope.screenData[t].data[rows]=dataItems,$scope.screenData[t].data[rows].rowIndex=rows}break}}function setDBData(){for(var all_tabs=[],t=0,tlen=$scope.screenData.length;tlen>t;t++){all_tabs.push($scope.screenData[t].$.name);for(var tabs=0,tablen=$scope.gafxml.tables.length;tablen>tabs;tabs++)if($scope.screenData[t].$.name===$scope.gafxml.tables[tabs].table._name){all_tabs[t]="",$scope.gafxml.tables[tabs].table.data=[];for(var rows=0,rlen=$scope.screenData[t].data.length;rlen>rows;rows++){for(var dataItems={},dbcol=$scope.screenData[t].data[rows],j=0,jlen=$scope.screenData[t].column.length;jlen>j;j++){var col=$scope.screenData[t].column[j];try{dataItems[col.$.name]=dbcol[col.$.name]}catch(err){console.log($scope.gafxml.tables[tabs]),console.log(err)}}$scope.gafxml.tables[tabs].table.data[rows]=dataItems,$scope.gafxml.tables[tabs].table._description=$scope.screenData[t].$.description,$scope.gafxml.tables[tabs].table._tableCategory=$scope.screenData[t].$.tableType,$scope.screenData[t].$.hasOwnProperty("img")&&($scope.gafxml.tables[tabs].table.img=$scope.screenData[t].$.img)}}}for(var nt=0,ntlen=$scope.screenData.length;ntlen>nt;nt++)if(""!==all_tabs[nt]){$scope.gafxml.tables.push({}),$scope.gafxml.tables[$scope.gafxml.tables.length-1].table={},$scope.gafxml.tables[$scope.gafxml.tables.length-1].table._displayName=$scope.screenData[nt].$.displayName,$scope.gafxml.tables[$scope.gafxml.tables.length-1].table._name=$scope.screenData[nt].$.name,$scope.gafxml.tables[$scope.gafxml.tables.length-1].table._number=$scope.screenData[nt].$.number,$scope.gafxml.tables[$scope.gafxml.tables.length-1].table._description=$scope.screenData[nt].$.description,$scope.gafxml.tables[$scope.gafxml.tables.length-1].table._tableCategory=$scope.screenData[nt].$.tableType,$scope.screenData[nt].$.hasOwnProperty("img")&&($scope.gafxml.tables[$scope.gafxml.tables.length-1].table.img=$scope.screenData[nt].$.img),$scope.gafxml.tables[$scope.gafxml.tables.length-1].table.data=[];for(var nrows=0,nrlen=$scope.screenData[nt].data.length;nrlen>nrows;nrows++){for(var newItems={},newcol=$scope.screenData[nt].data[nrows],nj=0,njlen=$scope.screenData[nt].column.length;njlen>nj;nj++){var ncol=$scope.screenData[nt].column[nj];newItems[ncol.$.name]=newcol[ncol.$.name]}$scope.gafxml.tables[$scope.gafxml.tables.length-1].table.data.push(newItems)}}for(var ed=0;ed<$scope.currentlyEditing.length;ed++)"EQ"===$scope.currentlyEditing[ed].editType&&($scope.currentlyEditing[ed].allowed?$scope.gafxml.eqEditUser=$scope.authentication.user._id:$scope.gafxml.eqEditUser=void 0),"CC"===$scope.currentlyEditing[ed].editType&&($scope.currentlyEditing[ed].allowed?$scope.gafxml.ccEditUser=$scope.authentication.user._id:$scope.gafxml.ccEditUser=void 0),"FT"===$scope.currentlyEditing[ed].editType&&($scope.currentlyEditing[ed].allowed?$scope.gafxml.ftEditUser=$scope.authentication.user._id:$scope.gafxml.ftEditUser=void 0)}$scope.authentication=Authentication,$scope.gafxmldata={},$scope.convertedXML="",$scope.vendor="",$scope.model="",$scope.issue="",$scope.version="",$scope.currentRowData={},$scope.currentlyEditing=[{editType:"EQ",allowed:!1},{editType:"CC",allowed:!1},{editType:"FT",allowed:!1}],$scope.setEditType=function(editType,allowed){Gafglobals.setCurrentlyEditing(editType,allowed)},$scope.getEditType=function(editType){var editAllowed=Gafglobals.getCurrentlyEditing(editType);return editAllowed?"edit":"read"},$scope.getEditAllowed=function(editType){if("EQ"===editType&&$scope.gafxml&&$scope.gafxml.eqEditUser){if($scope.gafxml.eqEditUser===$scope.authentication.user._id)return!0;if($scope.gafxml.eqEditUser._id===$scope.authentication.user._id)return!0}if("CC"===editType&&$scope.gafxml&&$scope.gafxml.ccEditUser){if($scope.gafxml.ccEditUser===$scope.authentication.user._id)return!0;if($scope.gafxml.ccEditUser._id===$scope.authentication.user._id)return!0}if("FT"===editType&&$scope.gafxml&&$scope.gafxml.ftEditUser){if($scope.gafxml.ftEditUser===$scope.authentication.user._id)return!0;if($scope.gafxml.ftEditUser._id===$scope.authentication.user._id)return!0}return!1},$scope.getEditColor=function(){switch($scope.currentlyEditing=Gafglobals.getCurrentlyEditing(),$scope.currentlyEditing){case"EQ":return"text-info";case"CC":return"text-success";case"FT":return"text-warning"}return $scope.currentlyEditing},$scope.checkDeleteAllow=function(){return $scope.gafxml?$scope.gafxml.freezeDocUser?!1:!$scope.authentication.user||$scope.gafxml.eqEditUser||$scope.gafxml.ccEditUser||$scope.gafxml.ftEditUser?!1:!0:!1},$scope.checkEditAllow=function(){if(!$scope.gafxml)return!1;if($scope.gafxml.freezeDocUser)return!1;if($scope.authentication.user){if($scope.gafxml.eqEditUser){if($scope.authentication.user._id===$scope.gafxml.eqEditUser)return!0;if($scope.authentication.user._id===$scope.gafxml.eqEditUser._id)return!0}if($scope.gafxml.ccEditUser){if($scope.authentication.user._id===$scope.gafxml.ccEditUser)return!0;if($scope.authentication.user._id===$scope.gafxml.ccEditUser._id)return!0}if($scope.gafxml.ftEditUser){if($scope.authentication.user._id===$scope.gafxml.ftEditUser)return!0;if($scope.authentication.user._id===$scope.gafxml.ftEditUser._id)return!0}if(!$scope.gafxml.eqEditUser||!$scope.gafxml.ccEditUser||!$scope.gafxml.ftEditUser)return!0}return!1},$scope.checkFreezeAllow=function(){return $scope.gafxml?$scope.gafxml.freezeDocUser?!1:!$scope.authentication.user||$scope.gafxml.eqEditUser||$scope.gafxml.ccEditUser||$scope.gafxml.ftEditUser?!1:!0:!1},$scope.$watch("scriptChanged",function(newValue,oldValue){Gafglobals.setGafScriptChanged(newValue)}),$rootScope.$watch("doDocSave",function(newValue,oldValue){console.log("rootscope doDocsave"),$rootScope.doDocSave&&$scope.scriptChanged&&$scope.update()}),$scope.prepareDownload=function(){setDBData();var gafxml=JSON.stringify($scope.gafxml.tables),blob=new Blob([gafxml],{type:"text/json"});$scope.downloadurl=(window.URL||window.webkitURL).createObjectURL(blob)},$scope.showContent=function($fileContent){$scope.gafxmlContent=$fileContent},$scope.uploadDocument=function(){for(var uploadTables=JSON.parse($scope.gafxmlContent),i=0,ilen=uploadTables.length;ilen>i;i++)for(var j=0,jlen=$scope.screenData.length;jlen>j;j++)if($scope.screenData[j].$.name===uploadTables[i].table._name){$scope.screenData[j].data=angular.copy(uploadTables[i].table.data),$scope.screenData[j].$.description=uploadTables[i].table._description,uploadTables[i].table.hasOwnProperty("img")&&($scope.screenData[j].$.img=uploadTables[i].table.img),uploadTables[i].table.hasOwnProperty("rowStatus")&&($scope.screenData[j].$.rowStatus=uploadTables[i].table.rowStatus);break}$scope.update()},$scope.xmlPublished="",$scope.publishXML=function(publishFormData){$scope.xmlPublished="Central Appendix being published. Please wait....";var xmlData=$scope.getXML(),userInfo={author:$scope.authentication.user.displayName,authorComments:publishFormData.authorComments,release:publishFormData.release,vendor:$scope.vendor,model:$scope.model,issue:$scope.issue,version:$scope.version},gafxml=new Gafxmls(xmlData);gafxml.$publishXML(userInfo,function(resp){console.log("Document published..."),console.log(resp),$scope.publishUpdate(),$scope.convertedXML="",$scope.xmlPublished="Central Appendix published:: "+resp.author+" | "+resp.authorComments,resp.errors&&($scope.xmlPublished="Central Appendix published:: "+resp.author+" | "+resp.authorComments+resp.errors)},function(errorResponse){$scope.error=errorResponse.data.errors,$scope.xmlPublished="Central Appendix publish Failed!! "+errorResponse.data.errors})},$scope.openPublishXML=function(size){$modal.open({animation:$scope.animationsEnabled,templateUrl:"publishXML.html",controller:"PublishXMLController",size:size,backdrop:"static",resolve:{checkin:function(){return $scope.publishXML}}})},$scope.showModel=function(table){for(var t=0,tlen=$scope.screenData.length;tlen>t;t++)if($scope.screenData[t].$.name===table.$.name){$window.alert(JSON.stringify($scope.screenData[t].data));break}},$scope.setSample=function(){for(var t=0,tlen=$scope.screenData.length;tlen>t;t++)for(var rows=0;3>rows;rows++){for(var dataItems={},j=0,jlen=$scope.screenData[t].column.length;jlen>j;j++){var col=$scope.screenData[t].column[j];dataItems[col.$.name]="init value"+j+"-"+rows}$scope.screenData[t].data[rows]=dataItems}},$scope.openLoader=function(size,table){$scope.modalLoader=$modal.open({animation:$scope.animationsEnabled,templateUrl:"loader.html",controller:"LoaderController",size:size,backdrop:"static",resolve:{loaderCreated:function(){}}}),$timeout(function(){$scope.closeLoading(table)},2e3)},$scope.closeLoading=function(table){for(var nt=0,ntlen=$scope.screenData.length;ntlen>nt;nt++)if($scope.screenData[nt].$.name===table.$.name){$scope.setCurrentTable($scope.screenData[nt]);break}},$scope.closeLoader=function(){void 0!==$scope.modalLoader&&$scope.modalLoader.dismiss("cancel")},$scope.gafxmlTables||initScope(),setTable($scope.gafxmlXSD.guiData.table[0]),$scope.setCurrentTable=function(table){setTable(table)},$scope.getColumnHeaders=function(col){return Gafglobals.getColumnHeaders(col)},$scope.getColumnDisplayType=function(col){return Gafglobals.getColumnDisplayType(col)},$scope.getColInfo=function(col){return Gafglobals.getColInfo(col)},$scope.initScreenData=function(){for(var nt=0,ntlen=$scope.screenData.length;ntlen>nt;nt++)$scope.screenData[nt].data=[];for(var i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++)$scope.gafxmlXSD.guiData.table[i].data=[]},$scope.create=function(){var gafxml=new Gafxmls({vendor:$scope.gafxml.vendor,model:$scope.gafxml.model,issue:$scope.gafxml.issue,version:$scope.gafxml.version});gafxml.tables=[];for(var nt=0,ntlen=$scope.screenData.length;ntlen>nt;nt++){gafxml.tables.push({}),gafxml.tables[nt].table={},gafxml.tables[nt].table._displayName=$scope.screenData[nt].$.displayName,gafxml.tables[nt].table._name=$scope.screenData[nt].$.name,gafxml.tables[nt].table._number=$scope.screenData[nt].$.number,gafxml.tables[nt].table._description=$scope.screenData[nt].$.description,gafxml.tables[nt].table.data=[];for(var nrows=0,nrlen=$scope.screenData[nt].data.length;nrlen>nrows;nrows++){for(var newItems={},newcol=$scope.screenData[nt].data[nrows],nj=0,njlen=$scope.screenData[nt].column.length;njlen>nj;nj++){var ncol=$scope.screenData[nt].column[nj];newItems[ncol.$.name]=newcol[ncol.$.name]}gafxml.tables[nt].table.data.push(newItems)}}gafxml.$save(function(response){$scope.scriptChanged=!1,$scope.openSaveAck("sm"),$location.path("/#!/gafxmls/edit")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.openVMITool=function(size){$modal.open({animation:$scope.animationsEnabled,templateUrl:"vmiTool.html",controller:"VMIToolController",size:size,backdrop:"static",windowClass:"vmi-modal-window",resolve:{getXML:function(){return $scope.getXML}}})},$scope.openTreeView=function(size){$modal.open({animation:$scope.animationsEnabled,templateUrl:"TreeView.html",controller:"TreeViewController",backdrop:"static",windowClass:"treeView-modal-window",scope:$scope,resolve:{saveHierarchy:function(){return $scope.saveHierarchy},getHierarchy:function(){return $scope.getHierarchy}}})},$scope.saveHierarchy=function(msg){$scope.scriptChanged=!0;var imageForm={imageName:$scope.gafxml.vendor+"_"+$scope.gafxml.model+"_"+$scope.gafxml.issue+"_"+$scope.gafxml.version+".png",imageData:msg},gafxml=new Gafxmls(imageForm);gafxml.$publishImage(function(resp){console.log("Image published..."),console.log(resp),$scope.xmlPublished="Hierarchy Image published successfully... ",$scope.currentTable.$.img=resp.imageFileURI,resp.errors&&($scope.xmlPublished="Hierarchy Image publish failed..."+resp.error)},function(errorResponse){$scope.error=errorResponse.data.errors,$scope.xmlPublished="Hierarchy Image publish Failed!! "+errorResponse.data.errors})},$scope.parentColumnData=[],$scope.childColumnData=[],$scope.hierarchyTitle="",$scope.containsHierarchy=function(table){if(table.hasOwnProperty("hierarchy")){$scope.parentColumnData=[],$scope.childColumnData=[],$scope.nodeColors=[],$scope.hierarchyTitle=table.hierarchy[0].$.title;for(var childColumn=table.hierarchy[0].$.childColumn,parentColumn=table.hierarchy[0].$.parentColumn,i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++){var tabInfo=$scope.gafxmlXSD.guiData.table[i];if(tabInfo.$.name===table.$.name){for(var j=0,jlen=table.data.length;jlen>j;j++)if($scope.parentColumnData.push(table.data[j][parentColumn]),$scope.childColumnData.push(table.data[j][childColumn]),table.data[j].hasOwnProperty("rowStatus")){var rowStat=table.data[j].rowStatus;$scope.nodeColors.push("changed"===rowStat?"green":"new"===rowStat?"blue":"removed"===rowStat?"red":"grey")}else $scope.nodeColors.push("grey");break}}}return table.hasOwnProperty("hierarchy")},$scope.getHierarchy=function(){var rootNode=$scope.gafxml.vendor+"-"+$scope.gafxml.model+"-"+$scope.gafxml.issue+"-"+$scope.gafxml.version;return{parents:$scope.parentColumnData,children:$scope.childColumnData,rootNode:rootNode,nodeColors:$scope.nodeColors}},$scope.getXML=function(){for(var tableList=[],i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++){var tabInfo=$scope.gafxmlXSD.guiData.table[i];tableList.push({number:tabInfo.$.number,name:tabInfo.$.displayName,description:tabInfo.$.description})}return{tabList:tableList,xml:$scope.convertedXML}},$scope.openDeleteConfirm=function(size){$modal.open({animation:$scope.animationsEnabled,templateUrl:"deleteConfirm.html",controller:"DeleteController",size:size,backdrop:"static",resolve:{remove:function(){return $scope.remove}}})},$scope.saveAckStatus="Please wait saving record...",$scope.openSaveAck=function(size){$modal.open({animation:$scope.animationsEnabled,templateUrl:"saveAck.html",controller:"SaveAckController",size:size,backdrop:"static",scope:$scope,resolve:{findOne:function(){return $scope.findOne}}})},$scope.openBlocklyEditor=function(size){$modal.open({animation:$scope.animationsEnabled,templateUrl:"blocklyEditor.html",controller:"BlocklyController",backdrop:"static",windowClass:"app-modal-window",resolve:{saveScript:function(){return $scope.saveScript},getScript:function(){return $scope.getScript}}})},$scope.setBlocklyRowCol=function(row,col,scr){$scope.currentRow=row,$scope.currentColumn=col,$scope.currentScript=scr},$scope.getScript=function(msg){var blockInfo=$scope.getColInfo($scope.currentColumn),valueRow=$scope.currentTable.data[$scope.currentRow],varlist=[],taglist=[],positionalParmList=[],tagparmlist=[],dialoglist=[],colName="",matchColName="",tblName="",blocklyTitle="",tableType=$scope.currentTable.$.tableType,tableName=$scope.currentTable.$.name;blocklyTitle=tableType+" - ";for(var x=0,xlen=$scope.currentTable.column.length;xlen>x;x++){var xcol=$scope.currentTable.column[x];if(xcol.$.name!==$scope.currentColumn){var xval=valueRow[xcol.$.name];if(angular.isArray(xval))for(var y=0;y<xval.length;y++)blocklyTitle+=" - "+JSON.stringify(xval[y].item);else void 0!==xval&&(blocklyTitle+=" - "+JSON.stringify(xval))}}for(var v=0,vlen=blockInfo.varTable.length;vlen>v;v++){var whereCols=[],equalsCols=[],segments=[],segInfo={},segPrefix=[];if(colName=blockInfo.varTable[v].colName,tblName=blockInfo.varTable[v].tblName,blockInfo.varTable[v].hasOwnProperty("varMatchColumn")&&(matchColName=blockInfo.varTable[v].varMatchColumn),segInfo=checkForSegments(colName,tblName),segments=segInfo.segs,segPrefix=segInfo,void 0!==blockInfo.varTable[v].filter)for(var f=0,flen=blockInfo.varTable[v].filter.length;flen>f;f++)try{whereCols.push(blockInfo.varTable[v].filter[f].$.whereTableColName),equalsCols.push(blockInfo.varTable[v].filter[f].$.equalsVarTableColName)}catch(err){whereCols=[],equalsCols=[]}for(var i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++)if($scope.gafxmlXSD.guiData.table[i].$.name===tblName){for(var varTableData=$scope.gafxmlXSD.guiData.table[i].data,d=0,dlen=varTableData.length;dlen>d;d++)for(var dbcol=varTableData[d],j=0,jlen=$scope.gafxmlXSD.guiData.table[i].column.length;jlen>j;j++){{$scope.gafxmlXSD.guiData.table[i].column[j]}try{var okToPush=[],pushtoArray=!1;0===equalsCols.length&&(okToPush[okToPush.length]=!0,pushtoArray=!0);for(var we=0,welen=equalsCols.length;welen>we;we++){if(0===okToPush.length);else{for(var broken=!1,okp=0;okp<okToPush.length;okp++)if(okToPush[okp]===!1){broken=!0;break}if(broken)break}var equalVal=dbcol[equalsCols[we]],whereVal=valueRow[whereCols[we]];if(void 0===whereVal||void 0===equalVal)okToPush[okToPush.length]=!1;else if(angular.isArray(equalVal)){if(angular.isArray(whereVal))for(var ev=0,evl=equalVal.length;evl>ev;ev++){for(var broken2=!1,wv=0,wvl=whereVal.length;wvl>wv;wv++)if(equalVal[ev].item===whereVal[wv].item){okToPush[okToPush.length]=!0,pushtoArray=!0,broken2=!0;break}if(broken2)break}else for(var ev2=0,evl2=equalVal.length;evl2>ev2;ev2++)if(equalVal[ev2].item===whereVal.item){okToPush[okToPush.length]=!0,pushtoArray=!0;break}}else if(angular.isArray(whereVal)){for(var wv2=0,wvl2=whereVal.length;wvl2>wv2;wv2++)if(equalVal.item===whereVal[wv2].item){okToPush[okToPush.length]=!0,pushtoArray=!0;break}}else equalVal===whereVal&&(okToPush[okToPush.length]=!0,pushtoArray=!0);pushtoArray||(okToPush[okToPush.length]=!1)}for(var okp2=0;okp2<okToPush.length;okp2++)if(okToPush[okp2]===!1){pushtoArray=!1;break}if(pushtoArray){var varData=[];switch(blockInfo.varTable[v].storageType){case"NEPARM":for(var vl=0,vllen=varlist.length;vllen>vl;vl++)if(varlist[vl].indexOf(dbcol[colName])>=0){pushtoArray=!1;break}break;case"TAG":for(var tl=0,tllen=taglist.length;tllen>tl;tl++)if(taglist[tl].indexOf(dbcol[colName])>=0){pushtoArray=!1;break}break;case"TAG=NEPARM":if(""!==dbcol[matchColName]||void 0!==dbcol[matchColName]){for(var tnl=0,tnllen=tagparmlist.length;tnllen>tnl;tnl++)if(tagparmlist[tnl].indexOf(dbcol[colName])>=0){pushtoArray=!1;break}}else for(var pl=0,pllen=positionalParmList.length;pllen>pl;pl++)if(positionalParmList[pl].indexOf(dbcol[colName])>=0){pushtoArray=!1;break}break;case"DIALOG":okToPush=!0}if(pushtoArray)switch(blockInfo.varTable[v].storageType){case"NEPARM":varData.push(void 0===dbcol[colName]?"":dbcol[colName]),varData.push(void 0===dbcol[colName]?"":dbcol[colName]),varlist.push(varData);for(var sg=0;sg<segments.length;sg++){var slst=[];slst.push(segments[sg]),slst.push(segments[sg]),findInArray(varlist,slst)||varlist.push(slst)}break;case"TAG":varData.push(void 0===dbcol[colName]?"":dbcol[colName].toLowerCase()),varData.push(void 0===dbcol[colName]?"":dbcol[colName].toLowerCase()),taglist.push(varData);for(var tg=0;tg<segments.length;tg++){var tlst=[];tlst.push(segments[tg]),tlst.push(segments[tg]),findInArray(taglist,tlst)||taglist.push(tlst)}break;case"TAG=NEPARM":if(varData.push(void 0===dbcol[colName]?"":dbcol[colName].toLowerCase()),""!==dbcol[matchColName]&&void 0!==dbcol[matchColName]&&""!==dbcol[colName]&&void 0!==dbcol[colName]){varData.push(void 0===dbcol[colName]?"":dbcol[matchColName]+"="+dbcol[colName]),tagparmlist.push(varData);for(var tng=0;tng<segments.length;tng++){var tnlst=[];tnlst.push(segments[tng]),tnlst.push(segments[tng]),findInArray(tagparmlist,tnlst)||tagparmlist.push(tnlst)}}else{varData.push(void 0===dbcol[colName]?"":dbcol[colName].toLowerCase()),findInArray(positionalParmList,varData)||positionalParmList.push(varData);for(var pg=0;pg<segments.length;pg++){var plst=[];plst.push(segments[pg]),plst.push(segments[pg]),findInArray(positionalParmList,plst)||positionalParmList.push(plst)}}break;case"DIALOG":varData.push(void 0===dbcol[colName]?"":dbcol[colName]),varData.push(void 0===dbcol[colName]?"":dbcol[colName]),dialoglist.push(varData)}break}}catch(err){console.log(err)}}break}}var editMode=!1;editMode="edit"===$scope.readWrite?!0:!1;var scriptInfo={dlgTitle:blocklyTitle,blockEditable:editMode,vars:varlist,tags:taglist,tagParm:tagparmlist,posParm:positionalParmList,dialogs:dialoglist,scripts:$scope.currentScript,editMode:editMode,tableType:tableType,tableName:tableName};return scriptInfo},$scope.getLookupData=function(srow,scol){$scope.currentRow=srow,$scope.currentColumn=scol;for(var blockInfo=$scope.getColInfo($scope.currentColumn),valueRow=$scope.currentTable.data[$scope.currentRow],varlist=[],colName="",tblName="",v=0,vlen=blockInfo.varTable.length;vlen>v;v++){var whereCols=[],equalsCols=[];if(colName=blockInfo.varTable[v].colName,tblName=blockInfo.varTable[v].tblName,void 0!==blockInfo.varTable[v].filter)for(var f=0,flen=blockInfo.varTable[v].filter.length;flen>f;f++)try{whereCols.push(blockInfo.varTable[v].filter[f].$.whereTableColName),equalsCols.push(blockInfo.varTable[v].filter[f].$.equalsVarTableColName)}catch(err){whereCols=[],equalsCols=[]}for(var i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++)if($scope.gafxmlXSD.guiData.table[i].$.name===tblName){
for(var varTableData=$scope.gafxmlXSD.guiData.table[i].data,d=0,dlen=varTableData.length;dlen>d;d++)for(var dbcol=varTableData[d],j=0,jlen=$scope.gafxmlXSD.guiData.table[i].column.length;jlen>j;j++){{$scope.gafxmlXSD.guiData.table[i].column[j]}try{var okToPush=!1;0===equalsCols.length&&(okToPush=!0);for(var we=0,welen=equalsCols.length;welen>we;we++){var equalVal=JSON.stringify(dbcol[equalsCols[we]]),whereVal=JSON.stringify(valueRow[whereCols[we]]);if(angular.isArray(dbcol[equalsCols[we]])&&angular.isArray(valueRow[whereCols[we]])){for(var eqv1=0,eqvlen1=dbcol[equalsCols[we]].length;eqvlen1>eqv1;eqv1++){for(var whv=0,whvlen=valueRow[whereCols[we]].length;whvlen>whv;whv++)if(valueRow[whereCols[we]][whv].item===dbcol[equalsCols[we]][eqv1].item){okToPush=!0;break}if(okToPush)break}if(okToPush)break}else if(angular.isArray(dbcol[equalsCols[we]])){for(var eqv2=0,eqvlen2=dbcol[equalsCols[we]].length;eqvlen2>eqv2;eqv2++)if(dbcol[equalsCols[we]][eqv2].item===whereVal){okToPush=!0;break}if(okToPush)break}else if(angular.isArray(valueRow[whereCols[we]])){for(var eqv=0,eqvlen=valueRow[whereCols[we]].length;eqvlen>eqv;eqv++)if(valueRow[whereCols[we]][eqv].item===equalVal){okToPush=!0;break}if(okToPush)break}else{if(!(equalVal.indexOf(whereVal)>-1)){okToPush=!1;break}okToPush=!0}}if(okToPush){okToPush&&varlist.push({value:dbcol[colName],text:dbcol[colName]});break}}catch(err){console.log(err)}}break}}return varlist},$scope.saveScript=function(msg){$scope.scriptChanged=!0,$scope.currentTable.data[$scope.currentRow][$scope.currentColumn]=msg},$scope.change=function(){$scope.unsaved=!0,$window.alert("changed...")},$scope.remove=function(gafxml){if(gafxml){gafxml.$remove();for(var i in $scope.gafxmls)$scope.gafxmls[i]===gafxml&&$scope.gafxmls.splice(i,1)}else $scope.gafxml.$remove(function(){$location.path("gafxmls")})},$scope.update=function(){$scope.saveAckStatus="Please wait...",$scope.openSaveAck("sm"),setDBData();var gafxml=$scope.gafxml;gafxml.$update(function(result){console.log("Document updated..."),$scope.scriptChanged=!1,$scope.saveAckStatus="Saved successfully!",$scope.gafxml=result,setTableData($scope.gafxml.tables);for(var ct=0,ctlen=$scope.gafxmlXSD.guiData.table.length;ctlen>ct;ct++)if($scope.gafxmlXSD.guiData.table[ct].$.name===$scope.currentTable.$.name){$scope.setCurrentTable($scope.gafxmlXSD.guiData.table[ct]);break}$scope.scriptChanged=!1;for(var ed=0;ed<$scope.currentlyEditing.length;ed++)"EQ"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.eqEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1),"CC"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.ccEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1),"FT"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.ftEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1)},function(errorResponse){$scope.saveAckStatus="Saved Unsuccessfully!",$scope.error=errorResponse.data.message})},$scope.saveCopy=function(){var vn=$scope.version.charCodeAt(0);vn+=1;var newgafxml=new Gafxmls({vendor:$scope.vendor,model:$scope.model,issue:$scope.issue,version:String.fromCharCode(vn)});newgafxml.tables=[];for(var nt=0,ntlen=$scope.screenData.length;ntlen>nt;nt++){newgafxml.tables.push({}),newgafxml.tables[nt].table={},newgafxml.tables[nt].table._displayName=$scope.screenData[nt].$.displayName,newgafxml.tables[nt].table._name=$scope.screenData[nt].$.name,newgafxml.tables[nt].table._number=$scope.screenData[nt].$.number,newgafxml.tables[nt].table._description=$scope.screenData[nt].$.description,newgafxml.tables[nt].table.data=[];for(var nrows=0,nrlen=$scope.screenData[nt].data.length;nrlen>nrows;nrows++){for(var newItems={},newcol=$scope.screenData[nt].data[nrows],nj=0,njlen=$scope.screenData[nt].column.length;njlen>nj;nj++){var ncol=$scope.screenData[nt].column[nj];"rowStatus"!==ncol.$.name&&(newItems[ncol.$.name]=newcol[ncol.$.name])}newgafxml.tables[nt].table.data.push(newItems)}}newgafxml.$save(function(response){$location.path("/#!/gafxmls/edit")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.gafxmlTables||initScope(),$stateParams.gafxmlId&&console.log("there is a opened document."+$stateParams.gafxmlId),Gafxmls.query(function(result){$scope.gafxmls=result})},$scope.confirmClose=function(){var confm=$window.confirm("Are you sure you want to CLOSE the document?");confm&&$scope.checkForOpen()},$scope.checkForOpen=function(){if($scope.gafxml){console.log("there is an open document");var gafxml=$scope.gafxml;gafxml.$close(function(result){$scope.gafxml=result;for(var ed=0;ed<$scope.currentlyEditing.length;ed++)"EQ"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.eqEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1),"CC"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.ccEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1),"FT"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.ftEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1);$location.path("/#!/"),console.log("Document closing...")},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.confirmFreeze=function(){var confm=$window.confirm("Are you sure you want to FREEZE the document?");confm&&$scope.FreezeDoc()},$scope.FreezeDoc=function(){if($scope.gafxml){console.log("there is an open document");var gafxml=$scope.gafxml;gafxml.$freezeDoc(function(result){$scope.gafxml=result,$location.path("/#!/"),console.log("Document freezing...")},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.publishUpdate=function(){if($scope.gafxml){console.log("there is an open document");var gafxml=$scope.gafxml;gafxml.$publish(function(){console.log("Document publshed..."),$scope.convertedXML="",$scope.xmlPublished=""},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.editUpdate=function(){if($scope.gafxml){console.log("edit document");var eqAllow=void 0===$scope.gafxml.eqEditUser?!1:$scope.authentication.user===$scope.gafxml.eqEditUser,ccAllow=void 0===$scope.gafxml.ccEditUser?!1:$scope.authentication.user===$scope.gafxml.ccEditUser,ftAllow=void 0===$scope.gafxml.ftEditUser?!1:$scope.authentication.user===$scope.gafxml.ftEditUser;if(eqAllow||ccAllow||ftAllow){var gafxml=$scope.gafxml;gafxml.$edit(function(result){$scope.gafxml=result;for(var ed=0;ed<$scope.currentlyEditing.length;ed++)"EQ"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.eqEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1),"CC"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.ccEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1),"FT"===$scope.currentlyEditing[ed].editType&&$scope.gafxml.ftEditUser?Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!0):Gafglobals.setCurrentlyEditing($scope.currentlyEditing[ed].editType,!1);console.log("Document edited...")},function(errorResponse){$scope.error=errorResponse.data.message})}}},$scope.findOne=function(){$scope.gafxmlTables||initScope(),Gafxmls.get({gafxmlId:$stateParams.gafxmlId},function(result){$scope.gafxml=result,$scope.vendor=$scope.gafxml.vendor,$scope.model=$scope.gafxml.model,$scope.issue=$scope.gafxml.issue,$scope.version=$scope.gafxml.version;for(var i=0,ilen=$scope.gafxmlXSD.guiData.table.length;ilen>i;i++)for(var j=0,jlen=$scope.gafxml.tables.length;jlen>j;j++)if($scope.gafxml.tables[j].table._name===$scope.gafxmlXSD.guiData.table[i].$.name){$scope.gafxmlXSD.guiData.table[i].data=$scope.gafxml.tables[j].table.data,$scope.gafxmlXSD.guiData.table[i].$.description=$scope.gafxml.tables[j].table._description,$scope.gafxml.tables[j].table.hasOwnProperty("img")&&($scope.gafxmlXSD.guiData.table[i].$.img=$scope.gafxml.tables[j].table.img);break}setTableData($scope.gafxml.tables);var tabl=Gafglobals.getCurrentTable();console.log(tabl.$.name);for(var nt=0,ntlen=$scope.gafxmlXSD.guiData.table.length;ntlen>nt;nt++)if($scope.gafxmlXSD.guiData.table[nt].$.name===tabl.$.name){$scope.setCurrentTable($scope.gafxmlXSD.guiData.table[nt]);break}$scope.scriptChanged=!1,$scope.currentlyEditing=[{editType:"EQ",allowed:void 0===$scope.gafxml.eqEditUser?!1:$scope.gafxml.eqEditUser._id===$scope.authentication.user._id},{editType:"CC",allowed:void 0===$scope.gafxml.ccEditUser?!1:$scope.gafxml.ccEditUser._id===$scope.authentication.user._id},{editType:"FT",allowed:void 0===$scope.gafxml.ftEditUser?!1:$scope.gafxml.ftEditUser._id===$scope.authentication.user._id}];var doEditUpdate=!1;Gafglobals.getCurrentlyEditing("EQ")&&(void 0===$scope.gafxml.eqEditUser?!0:$scope.gafxml.eqEditUser._id===$scope.authentication.user._id)&&($scope.gafxml.eqEditUser=$scope.authentication.user,doEditUpdate=!0),Gafglobals.getCurrentlyEditing("CC")&&(void 0===$scope.gafxml.ccEditUser?!0:$scope.gafxml.ccEditUser._id===$scope.authentication.user._id)&&($scope.gafxml.ccEditUser=$scope.authentication.user,doEditUpdate=!0),Gafglobals.getCurrentlyEditing("FT")&&(void 0===$scope.gafxml.ftEditUser?!0:$scope.gafxml.ftEditUser._id===$scope.authentication.user._id)&&($scope.gafxml.ftEditUser=$scope.authentication.user,doEditUpdate=!0),doEditUpdate&&$scope.editUpdate()})},$scope.loadGIF=!1,$scope.generateXML=function(){$scope.loadGIF=!0,$scope.gafxmldata={};for(var table=[],t=0,tlen=$scope.screenData.length;tlen>t;t++){for(var tabl=$scope.screenData[t],rows=[],row=0,lrow=$scope.screenData[t].data.length;lrow>row;row++)rows[row]={data:$scope.screenData[t].data[row]};table[t]={table:{rows:rows},"@":{number:tabl.$.number,name:tabl.$.name,displayName:tabl.$.displayName,description:tabl.$.description}},tabl.$.hasOwnProperty("img")&&(table[t]["@"].img=tabl.$.img)}$scope.gafxmldata={tables:table},Gafxmls.json2xml({gaf_xml:$scope.gafxmldata,"@":{vendor:$scope.gafxml.vendor,model:$scope.gafxml.model,issue:$scope.gafxml.issue,version:$scope.gafxml.version}},function(response){$scope.convertedXML=response.xml,$scope.loadGIF=!1},function(errorResponse){$scope.error=errorResponse.data.message,$window.alert(errorResponse.data.message)})}}]),angular.module("gafxmls").controller("PublishXMLController",["$window","$scope","$modalInstance","checkin",function($window,$scope,$modalInstance,checkin){$scope.publishForm={authorComments:"none",release:"1.0"},$scope.publishXML=function(){checkin($scope.publishForm),$modalInstance.close()},$scope.cancelPublish=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gafxmls").controller("DeleteController",["$window","$scope","$modalInstance","remove",function($window,$scope,$modalInstance,remove){$scope.okToDelete=function(){remove(),$modalInstance.close()},$scope.cancelDelete=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gafxmls").controller("SaveAckController",["$window","$scope","$modalInstance","findOne",function($window,$scope,$modalInstance,findOne){$scope.saveStatus="Document Saving...",$scope.cancelDelete=function(){findOne(),$modalInstance.dismiss("cancel")}}]),angular.module("gafxmls").controller("BlocklyController",["$window","$scope","$modalInstance","saveScript","getScript",function($window,$scope,$modalInstance,saveScript,getScript){$scope.messages=[],$scope.$on("from-blockly",function(e,message){$scope.messages.push(message),saveScript(message)}),$scope.$on("close-blockly",function(e,message){$modalInstance.dismiss("cancel")}),$scope.message=function(msg){$scope.$broadcast("from-parent",msg)},$scope.saveMessage=function(msg){$scope.$broadcast("from-parent-save",msg)},$scope.loadBlockly=function(){return $scope.message(getScript())},$scope.cancelDelete=function(){$modalInstance.dismiss("cancel")},$scope.saveAndClose=function(){return $scope.saveMessage("Save stuff")}}]),angular.module("gafxmls").controller("VMIToolController",["$window","$scope","$modalInstance","getXML",function($window,$scope,$modalInstance,getXML){$scope.vmimessages=[],$scope.$on("from-vmitool",function(e,message){$scope.vmimessages.push(message)}),$scope.message=function(msg){$scope.$broadcast("from-parent",msg)},$scope.loadXML=function(){return $scope.message(getXML())},$scope.cancelDelete=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gafxmls").controller("TreeViewController",["$window","$scope","$modalInstance","saveHierarchy","getHierarchy",function($window,$scope,$modalInstance,saveHierarchy,getHierarchy){$scope.$on("save-treeView",function(e,message){saveHierarchy(message)}),$scope.$on("close-hierarchy",function(e,message){$modalInstance.dismiss("cancel")}),$scope.message=function(msg){$scope.$broadcast("from-parent",msg)},$scope.loadXML=function(){var hierarchy=getHierarchy(),msg={parents:hierarchy.parents,children:hierarchy.children,rootNode:hierarchy.rootNode,nodeColors:hierarchy.nodeColors};return $scope.message(msg)},$scope.saveMessage=function(msg){$scope.$broadcast("save-png",msg)},$scope.saveAndClose=function(){return $scope.saveMessage("Save stuff")},$scope.cancelDelete=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gafxmls").controller("LoaderController",["$window","$scope","$modalInstance","loaderCreated",function($window,$scope,$modalInstance,loaderCreated){$scope.cancelDelete=function(){$modalInstance.dismiss("cancel")}}]),angular.module("gafxmls").directive("gafxmlRow",function(){var rcontroller=function(){},defTemplate='<input type="text" data-ng-model="$parent.row[cols.$.name]" id="cols.$.name" class="form-control" placeholder="undefined" required>',inputText='<input type="text" data-ng-model="$parent.row[cols.$.name]" id="cols.$.name" class="form-control" placeholder="cols.$.name" required>';return{restrict:"AE",controller:rcontroller,scope:{colinfo:"@"},require:"^ngController",bindToController:!0,template:function($element,$attrs){var col=$attrs.colinfo;return"text"===col?inputText:defTemplate}}}),angular.module("gafxmls").directive("gafCheckboxList",function(){var cbController=["$scope",function($scope){function setCurrTableCellData(selected){$scope.$parent.$parent.row[currTableCol]=[];for(var s=0,slen=selected.length;slen>s;s++){var kv={item:selected[s]};$scope.$parent.$parent.row[currTableCol].push(kv)}}function stuffChanged(data){console.log("stuff changed for checkbox"),$scope.$parent.$parent.docEdited()}function getUniqueArray(array,item){var unique={},distinct=[];for(var i in array)"undefined"==typeof unique[array[i][item]]&&distinct.push(array[i]),unique[array[i][item]]={};return distinct}$scope.editMode="edit",$scope.initMode=!0;var currTableRow=0,currTableCol="";$scope.setupCheckBoxData=function(cTblRow,cTblCol,selectedVals,allottedVals,keyName,valName){currTableRow=cTblRow,currTableCol=cTblCol,$scope.cbItems=[];var skv={};if(angular.isArray(selectedVals)){if(void 0!==selectedVals)for(var s=0,slen=selectedVals.length;slen>s;s++)$scope.cbItems.push(selectedVals[s].item)}else skv={item:selectedVals},$scope.cbItems.push(skv.item);$scope.statuses=[];for(var v=0,vlen=allottedVals.length;vlen>v;v++){var kv={value:allottedVals[v].$[valName],text:allottedVals[v]._};$scope.statuses.push(kv)}$scope.statuses=getUniqueArray($scope.statuses,"value")},$scope.showStatus=function(){var selected=[];return angular.forEach($scope.statuses,function(sel){$scope.cbItems.indexOf(sel.value)>=0&&selected.push(sel.text)}),setCurrTableCellData(selected),$scope.initMode=!1,selected.length?selected.join(", "):"Not set"},$scope.$watch("cbItems",function(newValue,oldValue){$scope.initMode||stuffChanged(newValue)})}],defTemplate=' <a href="#" editable-checklist="cbItems" e-ng-options="s.value as s.text for s in statuses">  {{ showStatus() }}</a>',readTemplate=' <a href="#" buttons="no" editable-checklist="cbItems" e-ng-options="s.value as s.text for s in statuses">  {{ showStatus() }}</a>';return{restrict:"AE",controller:cbController,bindToController:!0,template:function($element,$attrs){return"read"===$attrs.editmode?readTemplate:defTemplate}}}),angular.module("gafxmls").directive("gafCheckboxOpenList",function(){var cbController=["$scope",function($scope){function stuffChanged(data){console.log("stuff changed for opencheckbox"),$scope.$parent.$parent.docEdited()}function setCurrTableCellData(selected){$scope.$parent.$parent.row[currTableCol]=[];for(var s=0,slen=selected.length;slen>s;s++){var kv={item:selected[s]};$scope.$parent.$parent.row[currTableCol].push(kv)}}function getUniqueArray(array,item){var unique={},distinct=[];for(var i in array)"undefined"==typeof unique[array[i][item]]&&distinct.push(array[i]),unique[array[i][item]]={};return distinct}$scope.editMode="edit",$scope.initMode=!0;var currTableRow=0,currTableCol="";$scope.setupCheckBoxData=function(cTblRow,cTblCol,selectedVals,allottedVals,keyName,valName){currTableRow=cTblRow,currTableCol=cTblCol,$scope.cbItems=[];var skv={};if(angular.isArray(selectedVals))for(var s=0,slen=selectedVals.length;slen>s;s++)null!==selectedVals[s]&&(skv=selectedVals[s].item,$scope.cbItems.push(skv));else skv=selectedVals,$scope.cbItems.push(skv);$scope.statuses=[];for(var v=0,vlen=allottedVals.length;vlen>v;v++){var kv={};if(angular.isArray(allottedVals[v].text)&&allottedVals[v].text.length>0)for(var i=0,ilen=allottedVals[v].text.length;ilen>i;i++)kv={value:allottedVals[v].value[i].item,text:allottedVals[v].text[i].item},$scope.statuses.push(kv);else allottedVals[v].hasOwnProperty("text")?(kv={value:allottedVals[v].value,text:allottedVals[v].text},$scope.statuses.push(kv)):(kv={value:allottedVals[v],text:allottedVals[v]},$scope.statuses.push(kv))}$scope.statuses=getUniqueArray($scope.statuses,"value")},$scope.showStatus=function(){var selected=[];return angular.forEach($scope.statuses,function(sel){$scope.cbItems.indexOf(sel.value)>=0&&selected.push(sel.text)}),setCurrTableCellData(selected),$scope.initMode=!1,selected.length?selected.join(", "):"Not set"},$scope.$watch("cbItems",function(newValue,oldValue){$scope.initMode||stuffChanged(newValue)})}],defTemplate=' <a href="#" editable-checklist="cbItems" e-ng-options="s.value as s.text for s in statuses">  {{ showStatus() }}</a>',readTemplate=' <a href="#" buttons="no" editable-checklist="cbItems" e-ng-options="s.value as s.text for s in statuses">  {{ showStatus() }}</a>';return{restrict:"AE",controller:cbController,bindToController:!0,template:function($element,$attrs){return"read"===$attrs.editmode?readTemplate:defTemplate}}}),angular.module("gafxmls").directive("gafTextList",function(){var tlController=["$scope",function($scope){function setCurrTableCellData(){$scope.$parent.$parent.row[currTableCol]=[];for(var s=0,slen=$scope.tlItems.length;slen>s;s++){var kv={item:$scope.tlItems[s].value};$scope.$parent.$parent.row[currTableCol].push(kv)}}function stuffChanged(data){console.log("stuff changed for textlist"),$scope.$parent.$parent.docEdited()}var currTableRow=0,currTableCol="";$scope.editMode="edit",$scope.initMode=!0,$scope.tlItems=[{id:1,value:"text"}],$scope.setupTextListData=function(cTblRow,cTblCol,selectedVals){currTableRow=cTblRow,currTableCol=cTblCol,$scope.tlItems=[];for(var s=0,slen=selectedVals.length;slen>s;s++){var kv={id:s+1,value:selectedVals[s].item};$scope.tlItems.push(kv)}},$scope.checkTLData=function(data,id){if($scope.colInfo.hasOwnProperty("pattern")){var pat=$scope.colInfo.pattern,re=new RegExp(pat,"g");if(!re.test(data))return"Invalid data format."}},$scope.$watch("tlItems",function(newValue,oldValue){$scope.initMode||stuffChanged(newValue)}),$scope.removeRow=function(index){$scope.tlItems.splice(index,1),setCurrTableCellData()},$scope.addRow=function(){$scope.inserted={id:$scope.tlItems.length+1,item:""},$scope.tlItems.push($scope.inserted)},$scope.saveTLData=function(data,id){for(var s=0,slen=$scope.tlItems.length;slen>s;s++)$scope.tlItems[s].id===id&&($scope.tlItems[s].value=data.tLData);stuffChanged(data),setCurrTableCellData()}}],defTemplate='<table class="table table-bordered table-hover table-condensed"><tr> <td><button class="btn btn-xs btn-success" ng-click="addRow()">Add row</button></td></tr> <tr ng-repeat="item in tlItems">   <td>     <span editable-text="item.value" e-style="width:150px" e-pattern="{{colInfo.pattern}}" onbeforesave="checkTLData($data, tlItems.id)" e-name="tLData" e-form="rowform" e-required>       {{ item.value || \'empty\' }}     </span></div>   </td>    <td style="white-space: nowrap">      <!-- form -->      <form editable-form name="rowform" onbeforesave="saveTLData($data, item.id)" ng-show="rowform.$visible" class="form-buttons form-inline" shown="inserted == item">        <button type="submit" ng-disabled="rowform.$waiting" class="btn btn-xs btn-primary">          save        </button>        <button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-xs btn-default">          cancel        </button>      </form>      <div class="buttons" ng-show="!rowform.$visible">        <p><button class="btn btn-xs btn-primary" ng-click="rowform.$show()">edit</button></p>        <p><button class="btn btn-xs btn-danger" ng-click="removeRow($index)">del</button></p>      </div>      </td> </tr></table>',readTemplate='<table class="table table-bordered table-hover table-condensed"> <tr ng-repeat="item in tlItems">   <td>     <span editable-text="item.value" style="width:10px" e-name="tLData" e-form="rowform" onbeforesave="checkTLData($data, tlItems.id)" e-required>       {{ item.value || \'empty\' }}     </span>   </td> </tr></table>';return{restrict:"AE",controller:tlController,bindToController:!0,template:function($element,$attrs){return"read"===$attrs.editmode?readTemplate:defTemplate}}}),angular.module("gafxmls").directive("gafDDList",function(){var tlController=["$scope","$filter",function($scope,$filter){function setCurrTableCellData(){$scope.$parent.$parent.row[currTableCol]=[];for(var s=0,slen=$scope.tlItems.length;slen>s;s++){var kv={item:$scope.tlItems[s].value};$scope.$parent.$parent.row[currTableCol].push(kv)}}var currTableRow=0,currTableCol="";$scope.editMode="edit",$scope.tlItems=[{id:1,value:"text"}],$scope.ddList=[],$scope.setupTextListData=function(cTblRow,cTblCol,selectedVals,ddData){currTableRow=cTblRow,currTableCol=cTblCol,$scope.tlItems=[];var kv={};if(angular.isArray(selectedVals))for(var s=0,slen=selectedVals.length;slen>s;s++)null!==selectedVals[s]&&(kv={id:s+1,value:selectedVals[s].item},$scope.tlItems.push(kv));else kv={id:1,value:selectedVals},$scope.tlItems.push(kv);if($scope.ddList=[],void 0!==ddData)for(var dd=0,ddlen=ddData.length;ddlen>dd;dd++)$scope.ddList[dd]=ddData[dd]},$scope.checkTLData=function(data,id){},$scope.removeRow=function(index){$scope.tlItems.splice(index,1),setCurrTableCellData()},$scope.addRow=function(){$scope.inserted={id:$scope.tlItems.length+1,item:""},$scope.tlItems.push($scope.inserted)},$scope.saveTLData=function(data,id){for(var s=0,slen=$scope.tlItems.length;slen>s;s++)$scope.tlItems[s].id===id&&($scope.tlItems[s].value=data.ddData);setCurrTableCellData()},$scope.showDDdata=function(item){var selected=[];return item.value&&(selected=$filter("filter")($scope.ddList,{value:item.value})),selected.length?selected[0].text:"Not set"}}],defTemplate='<table class="table table-bordered table-hover table-condensed" style="width:200px"><tr> <td><button class="btn btn-xs btn-success" ng-click="addRow()">Add row</button></td></tr> <tr ng-repeat="item in tlItems">   <td>     <span editable-select="item.value" style="width:140px" e-name="ddData" e-form="rowform" e-ng-options="s.value as s.text for s in ddList" onbeforesave="checkTLData($data, tlItems.id)" e-required>       {{ showDDdata(item) }}     </span>   </td>    <td style="white-space: nowrap">      <!-- form -->      <form editable-form name="rowform" onbeforesave="saveTLData($data, item.id)" ng-show="rowform.$visible" class="form-buttons form-inline" shown="inserted == item">        <p><button type="submit" ng-disabled="rowform.$waiting" class="btn btn-xs btn-primary">          save        </button></p>        <button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-xs btn-default">          cancel        </button>      </form>      <div class="buttons" ng-show="!rowform.$visible">        <p><button class="btn btn-xs btn-primary" ng-click="rowform.$show()">edit</button></p>        <p><button class="btn btn-xs btn-danger" ng-click="removeRow($index)">del</button></p>      </div>      </td> </tr></table>',readTemplate='<table class="table table-bordered table-hover table-condensed"> <tr ng-repeat="item in tlItems">   <td>     <span editable-text="item.value" style="width:10px" e-name="ddData" e-form="rowform" onbeforesave="checkTLData($data, tlItems.id)" e-required>       {{ item.value || \'empty\' }}     </span>   </td> </tr></table>';return{restrict:"AE",controller:tlController,bindToController:!0,template:function($element,$attrs){return"read"===$attrs.editmode?readTemplate:defTemplate}}}),angular.module("gafxmls").directive("gafSegmentTable",function(){var segmentController=["$scope","$filter","$window",function($scope,$filter,$window){function stuffChanged(data){console.log("stuff changed for segment"),$scope.$parent.$parent.docEdited()}function setCurrTableCellData(){$scope.$parent.$parent.row[currTableCol]=[];for(var s=0,slen=$scope.segmentData.length;slen>s;s++){var kv={item:$scope.segmentData[s]};$scope.$parent.$parent.row[currTableCol].push(kv)}}var currTableRow=0,currTableCol="";$scope.editMode="edit",$scope.initMode=!0,$scope.dataError=!1,$scope.segmentData=[{id:1,value:"text",dataType:"AN",segmentSize:"10"}],$scope.dataTypes=[{value:"int",text:"Numeric",sample:"1,2,99"},{value:"string",text:"AlphaNumeric",sample:"PST,SST"},{value:"range",text:"Range",sample:"1-10,100-120"},{value:"regex",text:"Expression",sample:"([A-Z][A-Z0-9]*)"},{value:"qs",text:"Quoted String",sample:"'Abcd...xyz'"},{value:"tbl",text:"Table",sample:"'1-80'"}],$scope.setupSegmentTabletData=function(cTblRow,cTblCol,selectedVals){currTableRow=cTblRow,currTableCol=cTblCol,$scope.segmentData=[];var kv={};if(angular.isArray(selectedVals)){for(var s=0,slen=selectedVals.length;slen>s;s++)if(null!==selectedVals[s]){var sval=selectedVals[s].item;kv="tbl"===sval.dataType?{id:sval.id,dataType:sval.dataType,segmentSize:sval.segmentSize,value:sval.value,separator:sval.separator}:"range"===sval.dataType?{id:sval.id,beginRange:sval.beginRange,endRange:sval.endRange,rangeStep:void 0===sval.rangeStep?"1":sval.rangeStep,dataType:sval.dataType,segmentSize:sval.segmentSize}:"qs"===sval.dataType||"int"===sval.dataType?{id:sval.id,dataType:sval.dataType,segmentSize:sval.segmentSize,value:sval.value}:"regex"===sval.dataType?{id:sval.id,dataType:sval.dataType,segmentSize:sval.segmentSize,value:sval.value}:"string"===sval.dataType?{id:sval.id,dataType:sval.dataType,segmentSize:sval.segmentSize,value:void 0===sval.value?"":sval.value}:sval.hasOwnProperty("value")&&""!==sval.value&&void 0!==sval.value?{id:sval.id,value:sval.value,dataType:sval.dataType,segmentSize:sval.segmentSize}:{id:s+1,value:sval,dataType:"string"},$scope.segmentData.push(kv)}}else kv={id:1,value:selectedVals,dataType:"AN",segmentSize:"10"},$scope.segmentData.push(kv)},$scope.showDataTypes=function(segment){var selected=[];return segment.dataType&&(selected=$filter("filter")($scope.dataTypes,{value:segment.dataType})),selected.length?selected[0].text:"Not set"},$scope.checkName=function(data,id){return 2===id&&"awesome"!==data?"Username 2 should be awesome":void 0},$scope.$watch("segmentData",function(newValue,oldValue){$scope.initMode||stuffChanged(newValue)}),$scope.segmentError="",$scope.checkValue=function(value,dataType,segmentSize,beginRange,endRange,rangeStep,separator){switch(dataType){case"int":if(""!==beginRange&&void 0!==beginRange||""!==endRange&&void 0!==endRange)return $scope.segmentError="Range values are not applicable for Numeric Data Type","Range values are not applicable for Numeric Data Type";if(isNaN(value)||void 0===value)return $scope.segmentError="Value should be number for Numeric Data Type","Value should be number for Numeric Data Type";if(""!==separator&&void 0!==separator)return $scope.segmentError="Separator invalid for Numeric Data Type","Separator invalid for Numeric Data Type";if(""!==rangeStep&&void 0!==rangeStep)return $scope.segmentError="Range Step is invalid for Numeric Data Type","Range Step is invalid for Numeric Range Type";break;case"string":if(""!==beginRange&&void 0!==beginRange||""!==endRange&&void 0!==endRange)return $scope.segmentError="Range values are not applicable for AlphaNumeric Data Type","Range values are not applicable for AlphaNumeric Data Type";if(""!==separator&&void 0!==separator)return $scope.segmentError="Separator invalid for String Data Type","Separator invalid for String Data Type";if(""!==rangeStep&&void 0!==rangeStep)return $scope.segmentError="Range Step is invalid for String Data Type","Range Step is invalid for String Range Type";break;case"qs":if(""!==beginRange&&void 0!==beginRange||""!==endRange&&void 0!==endRange)return $scope.segmentError="Range values are not applicable for Quoted String Data Type","Range values are not applicable for Quoted String Data Type";if(isNaN(segmentSize)||void 0===segmentSize||""===segmentSize)return $scope.segmentError="Size should be valid number for Quoted String Data Type","Value should be number for Quoted String Data Type";if(""!==separator&&void 0!==separator)return $scope.segmentError="Separator invalid for Quoted String Data Type","Separator invalid for Quoted String Data Type";if(""!==rangeStep&&void 0!==rangeStep)return $scope.segmentError="Range Step is invalid for Quoted String Data Type","Range Step is invalid for Quoted String Range Type";break;case"range":if(""===beginRange||void 0===beginRange||""===endRange||void 0===endRange)return $scope.segmentError="Provide Begin and End Values for Range","Provide Begin and End Values for Range";if(""!==value&&void 0!==value)return $scope.segmentError="Value is not applicable for Range Data Type","Value is not applicable for Range Range Type";if(""===rangeStep||void 0===rangeStep)return $scope.segmentError="Range Step is required for Range Data Type","Range Step is required for Range Range Type";if(isNaN(segmentSize))return $scope.segmentError="Size should be empty for Range Data Type","Value should be number for Numeric Range Type";break;case"regex":if(""!==beginRange&&void 0!==beginRange||""!==endRange&&void 0!==endRange)return $scope.segmentError="Range values are not applicable for Expression Data Type","Range values are not applicable for Expression Data Type";if(isNaN(segmentSize)||void 0===segmentSize||""===segmentSize)return $scope.segmentError="Size should be valid number for Expression Data Type","Value should be number for Expression Data Type";if(""!==separator&&void 0!==separator)return $scope.segmentError="Separator invalid for Expression Data Type","Separator invalid for Expression Data Type";break;case"tbl":if(""!==beginRange&&void 0!==beginRange||""!==endRange&&void 0!==endRange)return $scope.segmentError="Range values are not applicable for Table Data Type","Range values are not applicable for Table Data Type";if(""===value||void 0===value)return $scope.segmentError="Value cannot be empty","Value cannot be empty";if(""===separator||void 0===separator)return $scope.segmentError="Separator cannot be empty","Separator cannot be empty";if(void 0!==segmentSize&&""!==segmentSize)return $scope.segmentError="Size is invalid for Table Data Type",
"Size is invalid for Table Data Type"}$scope.segmentError=""},$scope.checkBeginRange=function(data,id,dataType,segmentSize){return"not valid"},$scope.checkEndRange=function(data,id,dataType,segmentSize){},$scope.addSegment=function(){$scope.inserted={id:$scope.segmentData.length+1,value:"",beginRange:"",endRange:"",dataType:null,segmentSize:""},$scope.segmentData.push($scope.inserted)},$scope.validateSegementData=function(data,id){return $scope.checkValue(data.value,data.dataType,data.segmentSize,data.beginRange,data.endRange,data.rangeStep,data.separator)},$scope.saveSegment=function(data,id){var sdata={id:id,value:data.value,beginRange:data.beginRange,endRange:data.endRange,rangeStep:data.rangeStep,separator:data.separator,dataType:data.dataType,segmentSize:data.segmentSize};angular.extend(data,{id:id});for(var s=0;s<$scope.segmentData.length;s++)if($scope.segmentData[s].id===id){$scope.segmentData[s]=sdata;break}stuffChanged(data),setCurrTableCellData()},$scope.removeSegment=function(index){$scope.segmentData.splice(index,1),setCurrTableCellData()},$scope.setCurrentDataType=function(data){$scope.currentDataType=data,console.log("current datatype="+data)}}],defTemplate='<div ng-show="segmentError.length > 0" class="alert alert-danger alert-xs"><span><strong>{{segmentError}}</strong></span><br/></div><button class="btn btn-default btn-xs btn-success" ng-click="addSegment()">Add row</button><table align="center" class="table table-bordered table-hover table-condensed" style="width:420px"><tr><th class="col-sm-3">Data Types</th><th class="col-sm-1">Size</th><th class="col-sm-1">Value</th><th class="col-sm-2">Range Values</th><th class="col-sm-1">Edit</th></tr><tr ng-repeat="segment in segmentData"><td><!-- editable status (select-local) --><span editable-select="segment.dataType" e-style="width:140px" e-onChange="console.log(\'changed\');" e-name="dataType" e-form="rowform" e-ng-options="s.value as s.text for s in dataTypes">{{ showDataTypes(segment) }}</span></td><td><!-- editable group (select-remote) --><span editable-text="segment.segmentSize" e-style="width:50px" e-name="segmentSize" e-form="rowform">{{ segment.segmentSize || \'empty\' }}</span></td><td><!-- editable username (text with validation) -->Data:&nbsp;<span editable-text="segment.value" e-style="width:140px" e-name="value" e-form="rowform" e-required>{{ segment.value || \'empty\' }}</span><br/><!-- editable username (text with validation) -->Table Separator:&nbsp;<span editable-text="segment.separator" e-style="width:140px" e-name="separator" e-form="rowform" e-required>{{ segment.separator || \'empty\' }}</span></td><td><!-- editable username (text with validation) -->Begin:&nbsp;<span editable-text="segment.beginRange" e-style="width:140px" e-name="beginRange" e-form="rowform" e-required>{{ segment.beginRange || \'empty\' }}</span><br/><!-- editable username (text with validation) -->End:&nbsp;<span editable-text="segment.endRange" e-style="width:140px" e-name="endRange" e-form="rowform" e-required>{{ segment.endRange || \'empty\' }}</span><br/><!-- editable username (text with validation) -->Step:&nbsp;<span editable-text="segment.rangeStep" e-style="width:140px" e-name="rangeStep" e-form="rowform" e-required><strong>{{ segment.rangeStep || \'empty\' }}</strong></span></td><td style="white-space: nowrap"><!-- form --><form editable-form name="rowform" onbeforesave="validateSegementData($data, segment.id)" onaftersave="saveSegment($data, segment.id)" ng-show="rowform.$visible" class="form-buttons form-inline" shown="inserted == segment"><button type="submit" ng-disabled="rowform.$waiting" class="btn btn-primary btn-xs">Save</button><br/><button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-default btn-xs">Cancel</button></form><div class="buttons" ng-show="!rowform.$visible"><button class="btn btn-primary btn-xs" ng-click="rowform.$show()">Edit</button><br/><button class="btn btn-danger btn-xs" ng-click="removeSegment($index)">Del</button></div></td></tr></table>',readTemplate='<table align="center" class="table table-bordered table-hover table-condensed" style="width:400px"><tr style="font-weight: bold"><td style="width:30%">Data Type</td><td style="width:15%">Size</td><td style="width:35%">Value</td><td style="width:35%">Range Values</td></tr><tr ng-repeat="segment in segmentData"><td><!-- editable status (select-local) --><span editable-select="segment.dataType" e-style="width:240px" e-onChange="console.log(\'changed\');" e-name="dataType" e-form="rowform" e-ng-options="s.value as s.text for s in dataTypes">{{ showDataTypes(segment) }}</span></td><td><!-- editable group (select-remote) --><span editable-text="segment.segmentSize" e-style="width:50px" e-name="segmentSize" e-form="rowform">{{ segment.segmentSize || \'empty\' }}</span></td><td><!-- editable username (text with validation) --><span editable-text="segment.value" e-style="width:140px" e-name="value" e-form="rowform" e-required>{{ segment.value || \'empty\' }}</span>&nbsp;|&nbsp;<!-- editable username (text with validation) -->Table Separator:<span editable-text="segment.separator" e-style="width:140px" e-name="separator" e-form="rowform" e-required>{{ segment.separator || \'empty\' }}</span></td><td><!-- editable username (text with validation) -->Begin:<span editable-text="segment.beginRange" e-style="width:140px" e-name="beginRange" e-form="rowform" e-required>{{ segment.beginRange || \'empty\' }}</span>&nbsp;|&nbsp;<!-- editable username (text with validation) -->End:<span editable-text="segment.endRange" e-style="width:140px" e-name="endRange" e-form="rowform" e-required>{{ segment.endRange || \'empty\' }}</span>&nbsp;|&nbsp;<!-- editable username (text with validation) -->Step:<span editable-text="segment.rangeStep" e-style="width:140px" e-name="rangeStep" e-form="rowform" e-required>{{ segment.rangeStep || \'empty\' }}</span></td></table>';return{restrict:"AE",controller:segmentController,bindToController:!0,template:function($element,$attrs){return"read"===$attrs.editmode?readTemplate:defTemplate}}}),angular.module("gafxmls").directive("gafxmlTable",function(){var controller=["$scope","$window",function($scope,$window){function getRow(rIndex){return $scope.getRowIndex(rIndex)}$scope.colWidths=[],$scope.maxRowIndex=0,$scope.getColumnWidth=function(colname){for(var cn=0,cnlen=$scope.colWidths.length;cnlen>cn;cn++){var cw=$scope.colWidths[cn];if(cw.colname===colname)return cw.colwidth}},$scope.setColumnWidth=function(colname,colwidth){for(var cn=0,cnlen=$scope.colWidths.length;cnlen>cn;cn++){var cw=$scope.colWidths[cn];if(cw.colname===colname){cw.colwidth=colwidth,$scope.colWidths[cn]=cw;break}}},$scope.addRow=function(){console.log("addRow");var tmparr=[],dataItems={};if(void 0!==$scope.searchText&&""!==$scope.searchText)return void $window.alert('There is a search item "'+$scope.searchText+'". Please remove that to add an empty row.');for(var j=0,jlen=$scope.currentTable.column.length;jlen>j;j++){var col=$scope.currentTable.column[j];dataItems[col.$.name]=""}dataItems.rowIndex=$scope.getNewRowIndex(),tmparr.push(dataItems);for(var di=0,dilen=$scope.currentTable.data.length;dilen>di;di++)dataItems=$scope.currentTable.data[di],tmparr.push(dataItems);$scope.currentTable.data=tmparr},$scope.addAfterRow=function(ind){if(console.log("addRow:"+ind),void 0!==$scope.searchText&&""!==$scope.searchText)return void $window.alert('There is a search item "'+$scope.searchText+'". Please remove that to add an empty row.');for(var tmparr=[],rowind=getRow(ind),di=0,dilen=$scope.currentTable.data.length;dilen>di;di++){var dataItems={};if(di===rowind){var tmpdataItems={};tmpdataItems=$scope.currentTable.data[di],tmparr.push(tmpdataItems);for(var j=0,jlen=$scope.currentTable.column.length;jlen>j;j++){var col=$scope.currentTable.column[j];dataItems[col.$.name]=""}dataItems.rowIndex=$scope.getNewRowIndex()}else dataItems=$scope.currentTable.data[di];tmparr.push(dataItems)}$scope.currentTable.data=tmparr},$scope.duplicateRow=function(ind){console.log("addRow:"+ind);for(var tmparr=[],rowind=getRow(ind),di=0,dilen=$scope.currentTable.data.length;dilen>di;di++){var dataItems={};if(di===rowind){var tmpdataItems={};tmpdataItems=angular.copy($scope.currentTable.data[di]),tmparr.push(tmpdataItems);for(var j=0,jlen=$scope.currentTable.column.length;jlen>j;j++){var col=$scope.currentTable.column[j];dataItems[col.$.name]=angular.copy($scope.currentTable.data[getRow(ind)][col.$.name])}dataItems.rowIndex=$scope.getNewRowIndex()}else dataItems=$scope.currentTable.data[di];tmparr.push(dataItems)}$scope.currentTable.data=tmparr},$scope.deleteRow=function(ind){var r=$window.confirm("Are you sure you want to delete this row?");r===!0&&$scope.currentTable.data.splice(getRow(ind),1)},$scope.getRowIndex=function(rIndex){for(var ri=0,rilen=$scope.currentTable.data.length;rilen>ri;ri++)if($scope.currentTable.data[ri].rowIndex===rIndex)return ri},$scope.getNewRowIndex=function(){$scope.maxRowIndex=0;for(var ci=0,cilen=$scope.currentTable.data.length;cilen>ci;ci++)$scope.currentTable.data[ci].rowIndex>$scope.maxRowIndex&&($scope.maxRowIndex=$scope.currentTable.data[ci].rowIndex);return $scope.maxRowIndex=$scope.maxRowIndex+1,$scope.maxRowIndex},$scope.setRowStatus=function(ind,status){$scope.currentTable.data[getRow(ind)].rowStatus=status,console.log("row "+ind+" status "+status)},$scope.isRowStatusChanged=function(row){if(row.hasOwnProperty("rowStatus"))switch(row.rowStatus){case"removed":return"danger rowRemoved";case"changed":return"success rowChanged";case"new":return"info rowAdded";case"tsrblock":return"warning";case"saveWarning":return"warning";default:return"active"}},$scope.idSelectedVote=null,$scope.setSelected=function(idSelectedVote){$scope.idSelectedVote=idSelectedVote},$scope.dynamicSize={width:350,height:250},$scope.flexbox=!0,$scope.size={},$scope.events=[],$scope.$on("angular-resizable.resizeEnd",function(event,args){$scope.msg="Resize me again...",$scope.events.unshift(event),$scope.size=args,args.width&&($scope.dynamicSize.width=args.width),args.height&&($scope.dynamicSize.height=args.height),$scope.setColumnWidth(args.id,args.width)}),$scope.$on("angular-resizable.resizeStart",function(event,args){$scope.msg="Woooohoooo!.."+args.width,$scope.events.unshift(event)}),$scope.docEdited=function(){$scope.$parent.scriptChanged=!0}}],etemplate='<div class="outer" style="width:{{currentTable.$.tableWidth}}"><div class="innera" style="width:{{currentTable.$.tableWidth}}"><table class="table table-bordered table-striped table-hover table-condensed"><thead><th class="btn btr-primary" style="width:100px; text-align:center"<div class="pull-center"><a class="btn btn-primary btn-sm" data-ng-click="addRow();"><i class="glyphicon glyphicon-plus"></i></a></div></th><th class="btn btr-primary" style="text-align:center" ng-repeat="cols in currentTable.column" id="{{cols.$.name}}" ng-init="colWidths.push({\'colname\':cols.$.name, \'colwidth\':cols.$.colSize.replace(\'px\',\'\')})" ng-hide="cols.$.name==\'rowStatus\'" class="repeat-animation" resizable r-directions="[\'right\']" r-flex="false" r-width="getColumnWidth(cols.$.name)">{{getColumnHeaders(cols.$.name)}}&nbsp;<a href="#"></a></th><th class="btn btr-primary" style="width:100px; text-align:center"><div class="pull-center"><a class="btn btn-primary btn-sm" data-ng-click="addRow();"><i class="glyphicon glyphicon-plus"></i></a></div></th></thead><tbody><tr ng-repeat="row in currentTable.data | filter:searchText" track by $index ng-init="currentRow=row.rowIndex" ng-click="setSelected(currentRow)" ng-class="isRowStatusChanged(row)"><td style="width:100px"><ul class="nav navbar-nav"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown"><span>Action</span> <b class="caret"></b></a><ul class="dropdown-menu"><li><a class="btn btn-primary btn-sm" data-ng-click="addAfterRow(currentRow);" data-toggle="popover" title="Add a row"><i class="glyphicon glyphicon-plus"></i></a></b></li><li><a class="btn btn-primary btn-sm" data-ng-click="deleteRow(currentRow);" data-toggle="popover" title="Delete this row"><i class="glyphicon glyphicon-trash"></i></a></b></li><li><a class="btn btn-primary btn-sm" data-ng-click="duplicateRow(currentRow);" data-toggle="popover" title="Duplicate this row"><i class="glyphicon glyphicon-duplicate"></i></a></b></li><li><a class="btn btn-success btn-sm" data-ng-click="setRowStatus(currentRow,\'changed\');" data-toggle="popover" title="Mark this row as changed"><i class="glyphicon glyphicon-paperclip"></i></a></b></li><li><a class="btn btn-danger btn-sm" data-ng-click="setRowStatus(currentRow,\'removed\');" data-toggle="popover" title="Mark this row as removed"><i class="glyphicon glyphicon-scissors"></i></a></b></li><li><a class="btn btn-info btn-sm" data-ng-click="setRowStatus(currentRow,\'new\');" data-toggle="popover" title="Mark this row as new"><i class="glyphicon glyphicon-star"></i></a></b></li><li><a class="btn btn-default btn-sm" data-ng-click="setRowStatus(currentRow,\'\');" data-toggle="popover" title="Reset to normal row"><i class="glyphicon glyphicon-step-backward"></i></a></b></li><li><a class="btn btn-warning btn-sm" data-ng-click="setRowStatus(currentRow,\'tsrblock\');" data-toggle="popover" title="Block TSR Display"><i class="glyphicon glyphicon-ban-circle"></i></a></b></li></ul></li></ul></td><td ng-repeat="cols in currentTable.column" track by $index ng-hide="cols.$.name==\'rowStatus\'" id="{{cols.$.name}}" class="repeat-animation" ng-init="colInfo=getColInfo(cols.$.name);currentColumn=$index" style="width:{{getColumnWidth(cols.$.name)}}px;min-width:{{getColumnWidth(cols.$.name)}}px;max-width:{{getColumnWidth(cols.$.name)}}px;" resizable r-directions="[\'right\']" r-flex="false" r-width="getColumnWidth(cols.$.name)"><div class="text-center" ng-if="colInfo.displayAs===\'text\'"><div ng-show="colInfo.hasOwnProperty(\'pattern\')"><a href="#" editable-text="$parent.row[cols.$.name]" onbeforesave="docEdited()" e-pattern="{{colInfo.pattern}}" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name] || \'empty\' }}</a></div><div ng-hide="colInfo.hasOwnProperty(\'pattern\')"><a href="#" editable-text="$parent.row[cols.$.name]" onbeforesave="docEdited()" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name] || \'empty\' }}</a></div></div><div class="text-center" ng-if="colInfo.displayAs===\'checkbox\'"><gaf-checkbox-list ng-init="setupCheckBoxData($parent.row, cols.$.name,$parent.row[cols.$.name], colInfo.domain, \'_\', colInfo.domainValue)" /></div><div class="text-center" ng-if="colInfo.displayAs===\'textlist\'"><gaf-text-list ng-init="setupTextListData($parent.row, cols.$.name,$parent.row[cols.$.name])" /></div><div class="text-center" ng-if="colInfo.displayAs===\'segment\'"><gaf-Segment-Table ng-init="setupSegmentTabletData($parent.row, cols.$.name,$parent.row[cols.$.name])" /></div><div class="text-center" ng-if="colInfo.displayAs===\'checkboxopen\'"><div ng-init="ddData = getLookupData(currentRow,cols.$.name)"><gaf-checkbox-open-list ng-init="setupCheckBoxData($parent.row, cols.$.name,$parent.row[cols.$.name], ddData, \'_\', colInfo.domainValue)" /></div></div><div class="text-center" ng-if="colInfo.displayAs===\'textarea\'"><a href="#" e-rows="7" e-cols="35" onbeforesave="docEdited()" editable-textarea="$parent.row[cols.$.name]" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name] || \'empty\' }}</a></div><div class="text-center" ng-if="colInfo.displayAs===\'script\'" ng-class="{selected : currentRow === idSelectedVote}">  <a href="#" e-rows="7" e-cols="35"  editable-textarea="$parent.row[cols.$.name].xml" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name].xml | limitTo:5 || \'empty\' }}</a>  <a class="pull-right btn btn-primary" data-ng-click="blocklyRow=getRowIndex(currentRow);setBlocklyRowCol(blocklyRow,cols.$.name, $parent.row[cols.$.name]);openBlocklyEditor(\'lg\');">   <i class="glyphicon glyphicon-pencil" toggle-data="toggle" title="Blockly Document"></i>  </a></div><span ng-if="getColumnDisplayType(cols.$.name)===\'span\'" data-ng-model="$parent.row[cols.$.name]">{{$parent.row[cols.$.name]}}</span></td><td><ul class="nav navbar-nav"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown"><span>Action</span> <b class="caret"></b></a><small>{{currentRow+1}}</small><ul class="dropdown-menu"><li><a class="btn btn-primary btn-sm" data-ng-click="addAfterRow(currentRow);" data-toggle="popover" title="Add a row"><i class="glyphicon glyphicon-plus"></i></a></b></li><li><a class="btn btn-primary btn-sm" data-ng-click="deleteRow(currentRow);" data-toggle="popover" title="Delete this row"><i class="glyphicon glyphicon-trash"></i></a></b></li><li><a class="btn btn-primary btn-sm" data-ng-click="duplicateRow(currentRow);" data-toggle="popover" title="Duplicate this row"><i class="glyphicon glyphicon-duplicate"></i></a></b></li><li><a class="btn btn-success btn-sm" data-ng-click="setRowStatus(currentRow,\'changed\');" data-toggle="popover" title="Mark this row as changed"><i class="glyphicon glyphicon-paperclip"></i></a></b></li><li><a class="btn btn-danger btn-sm" data-ng-click="setRowStatus(currentRow,\'removed\');" data-toggle="popover" title="Mark this row as removed"><i class="glyphicon glyphicon-scissors"></i></a></b></li><li><a class="btn btn-info btn-sm" data-ng-click="setRowStatus(currentRow,\'new\');" data-toggle="popover" title="Mark this row as new"><i class="glyphicon glyphicon-star"></i></a></b></li><li><a class="btn btn-default btn-sm" data-ng-click="setRowStatus(currentRow,\'\');" data-toggle="popover" title="Reset to normal row"><i class="glyphicon glyphicon-step-backward"></i></a></b></li><li><a class="btn btn-warning btn-sm" data-ng-click="setRowStatus(currentRow,\'tsrblock\');" data-toggle="popover" title="Block TSR Display"><i class="glyphicon glyphicon-ban-circle"></i></a></b></li></ul></li></ul></td></tr></tbody></table>',rtemplate='<div class="outer" style="width:{{currentTable.$.tableWidth}}"><div class="innera" style="width:{{currentTable.$.tableWidth}}"><table class="table table-bordered table-striped table-hover table-condensed" id="gaf-xml-tbl"><thead><tr><th class="btn btr-primary" style="text-align:center" ng-repeat="cols in currentTable.column" id="{{cols.$.name}}" ng-init="colWidths.push({\'colname\':cols.$.name, \'colwidth\':cols.$.colSize.replace(\'px\',\'\')})" ng-hide="cols.$.name==\'rowStatus\'" class="repeat-animation" resizable r-directions="[\'right\']" r-flex="false" r-width="getColumnWidth(cols.$.name)">{{getColumnHeaders(cols.$.name)}}&nbsp;<a href="#"></a></th></tr></thead><p/><p/><p/><tbody><tr ng-repeat="row in currentTable.data | filter:searchText" track by $index ng-init="currentRow=row.rowIndex" ng-click="setSelected(currentRow)" ng-class="isRowStatusChanged(row)"><td ng-repeat="cols in currentTable.column" track by $index ng-hide="cols.$.name==\'rowStatus\'" id="{{cols.$.name}}" class="repeat-animation" ng-init="colInfo=getColInfo(cols.$.name);currentColumn=$index" style="width:{{getColumnWidth(cols.$.name)}}px;min-width:{{getColumnWidth(cols.$.name)}}px;max-width:{{getColumnWidth(cols.$.name)}}px;" resizable r-directions="[\'right\']" r-flex="false" r-width="getColumnWidth(cols.$.name)"><div class="text-center" ng-if="colInfo.displayAs===\'text\'"><div ng-show="colInfo.hasOwnProperty(\'pattern\')"><a href="#" buttons="no" editable-text="$parent.row[cols.$.name]" e-pattern="{{colInfo.pattern}}" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name] || \'empty\' }}</a></div><div ng-hide="colInfo.hasOwnProperty(\'pattern\')"><a href="#" buttons="no" editable-text="$parent.row[cols.$.name]" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name] || \'empty\' }}</a></div></div><div class="text-center" ng-if="colInfo.displayAs===\'checkbox\'"><gaf-checkbox-list editMode="read" ng-init="setupCheckBoxData($parent.row, cols.$.name,$parent.row[cols.$.name], colInfo.domain, \'_\', colInfo.domainValue)" /></div><div class="text-center" ng-if="colInfo.displayAs===\'textlist\'"><gaf-text-list editMode="read" ng-init="setupTextListData($parent.row, cols.$.name,$parent.row[cols.$.name])" /></div><div class="text-center" ng-if="colInfo.displayAs===\'segment\'"><gaf-Segment-Table editMode="read" ng-init="setupSegmentTabletData($parent.row, cols.$.name,$parent.row[cols.$.name])" /></div><div class="text-center" ng-if="colInfo.displayAs===\'checkboxopen\'"><div ng-init="ddData = getLookupData(currentRow,cols.$.name)"><gaf-checkbox-open-list editMode="read" ng-init="setupCheckBoxData($parent.row, cols.$.name,$parent.row[cols.$.name], ddData, \'_\', colInfo.domainValue)" /></div></div><div class="text-center" ng-if="colInfo.displayAs===\'textarea\'"><a href="#" buttons="no" e-rows="7" e-cols="35" editable-textarea="$parent.row[cols.$.name]" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name] || \'empty\' }}</a></div><div class="text-center" ng-if="colInfo.displayAs===\'script\'" ng-class="{selected : currentRow === idSelectedVote}">  <a href="#" buttons="no" e-rows="7" e-cols="35"  editable-textarea="$parent.row[cols.$.name].xml" e-required e-placeholder="cols.$.name">{{ $parent.row[cols.$.name].xml | limitTo:5 || \'empty\' }}</a>  <a class="pull-right btn btn-primary" data-ng-click="blocklyRow=getRowIndex(currentRow);setBlocklyRowCol(blocklyRow,cols.$.name, $parent.row[cols.$.name]);openBlocklyEditor(\'lg\');">   <i class="glyphicon glyphicon-pencil" toggle-data="toggle" title="Blockly Document"></i>  </a></div><span ng-if="getColumnDisplayType(cols.$.name)===\'span\'" data-ng-model="$parent.row[cols.$.name]">{{$parent.row[cols.$.name]}}</span></td></tr></tbody></table></div></div>',htemplate='<table class="table table-bordered table-striped" id="gaf-xml-tbl"><thead><th ng-repeat="cols in currentTable.column" ng-hide="cols.$.name==\'rowStatus\'" class="repeat-animation td-fixedwidth">{{getColumnHeaders(cols.$.name)}}&nbsp;<a href="#" custom-sort order="cols.$.name" sort="sort"></a></th></thead></table>';return{restrict:"AE",controller:controller,bindToController:!0,template:function($element,$attrs){return"edit"===$attrs.editmode?etemplate:"header"===$attrs.editmode?htemplate:rtemplate},scope:"=",link:function(scope,element,attrs){}}}),angular.module("gafxmls").directive("onReadFile",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsText((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}]),angular.module("gafxmls").factory("Gafxmls",["$resource",function($resource){return $resource("gafxmls/:gafxmlId",{gafxmlId:"@_id"},{get:{method:"GET",cache:!1},update:{method:"PUT",cache:!1},json2xml:{method:"POST",url:"/gafxmlfile",responseType:"text",cache:!1},close:{method:"PUT",url:"/gafxmls/close",cache:!1},publish:{method:"PUT",url:"/gafxmls/publish",cache:!1},edit:{method:"PUT",url:"/gafxmls/edit",cache:!1},xml2json:{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},url:"http://lorry.cc.telcordia.com:9595/GAFXMLRestAPI/resources/login/translate?",responseType:"text",cache:!1},publishXML:{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},url:"http://lorry.cc.telcordia.com:9595/GAFXMLRestAPI/resources/login/translate?",responseType:"json",cache:!1},freezeDoc:{method:"PUT",url:"/gafxmls/freeze",cache:!1},publishImage:{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},url:"http://lorry.cc.telcordia.com:9595/GAFXMLRestAPI/resources/login/uploadImage?",responseType:"json",cache:!1}})}]),angular.module("globals").factory("Gafglobals",[function(){var gafXmlGlobal={gafxmlXSD:{},gafxmlTables:{},gafxmlNameMappings:{},gafxmlTypes:{}},screenData=[],currentTable={},currentlyEditing=[{editType:"EQ",allowed:!1},{editType:"CC",allowed:!1},{editType:"FT",allowed:!1}],scriptChanged=!1;return{getCurrentlyEditing:function(editType){for(var e=0;e<currentlyEditing.length;e++)if(currentlyEditing[e].editType===editType)return currentlyEditing[e].allowed},setCurrentlyEditing:function(editType,allowed){for(var editTypeFound=!1,e=0;e<currentlyEditing.length;e++)if(currentlyEditing[e].editType===editType){currentlyEditing[e].allowed=allowed,editTypeFound=!0;break}editTypeFound||currentlyEditing.push({editType:editType,allowed:allowed})},getGafGlobals:function(){return gafXmlGlobal},setCurrentTable:function(tbl){currentTable=tbl},getGafScriptChanged:function(){return scriptChanged},setGafScriptChanged:function(schange){scriptChanged=schange},getCurrentTable:function(){return currentTable},setGafGlobals:function(globs){gafXmlGlobal=globs},getColumnHeaders:function(col){for(var i=0,len=gafXmlGlobal.gafxmlNameMappings[0].mapping.length;len>i;i++){var cName=gafXmlGlobal.gafxmlNameMappings[0].mapping[i].$.name;if(cName===col)return gafXmlGlobal.gafxmlNameMappings[0].mapping[i]._}},getColumnDisplayType:function(col){for(var t=0,tlen=gafXmlGlobal.gafxmlTables.length;tlen>t;t++){for(var cols=gafXmlGlobal.gafxmlTables[t].column,baseType="",c=0,clen=cols.length;clen>c;c++)if(cols[c].$.name===col){baseType=cols[c].$.type;break}for(var i=0,len=gafXmlGlobal.gafxmlTypes.length;len>i;i++){var cName=gafXmlGlobal.gafxmlTypes[i].$.name;if(cName===baseType)return gafXmlGlobal.gafxmlTypes[i].$.displayAs}}},getScreenDataStructure:function(){if(screenData.length<1)for(var i=0,len=gafXmlGlobal.gafxmlTables.length;len>i;i++){var tbl={},ctbl=gafXmlGlobal.gafxmlTables[i],cols=[],dataItems={};tbl.number=ctbl.$.number,tbl.name=ctbl.$.name,tbl.displayName=ctbl.$.displayName;for(var j=0,jlen=ctbl.column.length;jlen>j;j++){var col=ctbl.column[j];cols.push({name:col.$.name,value:[]}),dataItems[col.$.name]=""}tbl.column=cols,ctbl.data=[],ctbl.data[0]=dataItems,screenData.push(ctbl)}return screenData},utf8_encode:function(argString){if(null===argString||"undefined"==typeof argString)return"";var start,end,string=argString+"",utftext="",stringl=0;start=end=0,stringl=string.length;for(var n=0;stringl>n;n++){var c1=string.charCodeAt(n),enc=null;if(128>c1)end++;else if(c1>127&&2048>c1)enc=String.fromCharCode(c1>>6|192,63&c1|128);else if(55296!==(63488&c1))enc=String.fromCharCode(c1>>12|224,c1>>6&63|128,63&c1|128);else{if(55296!==(64512&c1))throw new RangeError("Unmatched trail surrogate at "+n);var c2=string.charCodeAt(++n);if(56320!==(64512&c2))throw new RangeError("Unmatched lead surrogate at "+(n-1));c1=((1023&c1)<<10)+(1023&c2)+65536,enc=String.fromCharCode(c1>>18|240,c1>>12&63|128,c1>>6&63|128,63&c1|128)}null!==enc&&(end>start&&(utftext+=string.slice(start,end)),utftext+=enc,start=end=n+1)}return end>start&&(utftext+=string.slice(start,stringl)),utftext},getColInfo:function(col){for(var colInfo={},t=0,tlen=gafXmlGlobal.gafxmlTables.length;tlen>t;t++){var cols=gafXmlGlobal.gafxmlTables[t].column,baseType="";if(gafXmlGlobal.gafxmlTables[t].$.name===currentTable.$.name){for(var c=0,clen=cols.length;clen>c;c++)if(cols[c].$.name===col){if(baseType=cols[c].$.type,cols[c].hasOwnProperty("varTable")){colInfo.varTable=[];for(var v=0,vlen=cols[c].varTable.length;vlen>v;v++){var tblInfo={};tblInfo=void 0===cols[c].varTable[v].filterVarTable?{tblName:cols[c].varTable[v].$.name,colName:cols[c].varTable[v].$.varColumn}:{tblName:cols[c].varTable[v].$.name,colName:cols[c].varTable[v].$.varColumn,filter:cols[c].varTable[v].filterVarTable},cols[c].varTable[v].$.hasOwnProperty("varMatchColumn")&&(tblInfo.varMatchColumn=cols[c].varTable[v].$.varMatchColumn),cols[c].varTable[v].$.hasOwnProperty("storageType")?tblInfo.storageType=cols[c].varTable[v].$.storageType:tblInfo.storageType="NEPARM",colInfo.varTable.push(tblInfo)}}break}for(var i=0,len=gafXmlGlobal.gafxmlTypes.length;len>i;i++){var cName=gafXmlGlobal.gafxmlTypes[i].$.name;if(cName===baseType){colInfo.displayAs=gafXmlGlobal.gafxmlTypes[i].$.displayAs,gafXmlGlobal.gafxmlTypes[i].$.hasOwnProperty("domain")&&(colInfo.domain=gafXmlGlobal.gafxmlXSD.guiData[gafXmlGlobal.gafxmlTypes[i].$.domain][0].mapping,colInfo.domainValue=gafXmlGlobal.gafxmlXSD.guiData[gafXmlGlobal.gafxmlTypes[i].$.domain][0].$.mapValue),gafXmlGlobal.gafxmlTypes[i].hasOwnProperty("pattern")&&(colInfo.pattern=gafXmlGlobal.gafxmlTypes[i].pattern[0]),void 0!==gafXmlGlobal.gafxmlTypes[i].$.pattern&&(colInfo.pattern=gafXmlGlobal.gafxmlTypes[i].$.pattern);break}}}}return colInfo}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/gafxmls")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;

return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);